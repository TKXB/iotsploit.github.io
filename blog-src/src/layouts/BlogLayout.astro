---
export interface Props {
  title: string;
  description?: string;
  author?: string;
  pubDate?: Date;
  tags?: string[];
  headings?: Array<{ depth: number; slug: string; text: string }>;
  isListing?: boolean;
}

const { title, description, author, pubDate, tags, headings = [], isListing = false } = Astro.props;
---

<!DOCTYPE html>
<html lang="zh-CN">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title} - IoTSploit Blog</title>
    <meta name="description" content={description} />
    
    <!-- 引入现代 CSS 框架 -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <style>
      :root {
        --primary-color: #ff5c35;
        --secondary-color: #0b2a3a;
        --accent-color: #0b6e99;
        --text-primary: #111827;
        --text-secondary: #4b5563;
        --background-light: #f7f7f8;
        --border-color: #e5e7eb;
        --sticky-offset: 96px;
        --shadow-light: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
        --shadow-medium: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
        --shadow-heavy: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
      }
      
      * {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      }
      
      body {
        background-color: var(--background-light);
        color: var(--text-primary);
        line-height: 1.6;
      }
      html { scroll-behavior: smooth; }
      
      .navbar {
        background-color: var(--secondary-color);
        box-shadow: var(--shadow-light);
        border-bottom: 1px solid rgba(255,255,255,0.06);
        padding: 1rem 0;
      }
      
      .navbar-brand {
        font-weight: 600;
        font-size: 1.5rem;
        color: #ffffff !important;
      }
      
      .navbar-item {
        color: rgba(255,255,255,0.85) !important;
        font-weight: 500;
        transition: color 0.2s ease;
      }
      .nav-icon {
        width: 1.05em;
        height: 1.05em;
        display: inline-block;
        vertical-align: -0.125em;
        margin-right: 0.5rem;
        fill: currentColor;
      }
      
      .navbar-item:hover {
        color: #ffffff !important;
        background-color: rgba(255,255,255,0.06) !important;
      }
      
      .blog-container {
        max-width: 1100px;
        margin: 0 auto;
        padding: 3rem 2rem;
      }
      
      .blog-title {
        font-size: 3rem;
        font-weight: 700;
        color: var(--text-primary);
        margin-bottom: 1.5rem;
        line-height: 1.2;
        letter-spacing: -0.02em;
      }
      
      .blog-meta {
        color: var(--text-secondary);
        font-size: 1rem;
        margin-bottom: 1.5rem;
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 2rem;
        flex-wrap: wrap;
      }
      
      .blog-meta span {
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }
      
      .blog-meta i {
        color: var(--primary-color);
      }
      .meta-icon {
        width: 1em;
        height: 1em;
        display: inline-block;
        vertical-align: -0.125em;
        margin-right: 0.5rem;
        fill: var(--primary-color);
      }
      
      .blog-description {
        font-size: 1.25rem;
        color: var(--text-secondary);
        max-width: 600px;
        margin: 0 auto 2rem;
        line-height: 1.6;
      }
      
      .blog-tags {
        margin-top: 2rem;
        display: flex;
        justify-content: center;
        flex-wrap: wrap;
        gap: 0.75rem;
      }
      
      .tag {
        background-color: transparent;
        color: var(--primary-color);
        border: 1px solid var(--primary-color);
        font-weight: 600;
        padding: 0.4rem 0.9rem;
        border-radius: 999px;
        font-size: 0.875rem;
        transition: all 0.2s ease;
      }
      
      .tag:hover {
        background-color: var(--primary-color);
        color: #ffffff;
        transform: translateY(-1px);
        box-shadow: var(--shadow-medium);
      }
      
      .blog-content {
        line-height: 1.8;
        font-size: 1.125rem;
        color: var(--text-primary);
      }

      /* TOC layout */
      .with-toc {
        display: grid;
        grid-template-columns: 280px 1fr;
        gap: 2rem;
        align-items: start;
      }

      .content-wrap {
        min-width: 0;
      }

      .toc {
        position: sticky;
        top: var(--sticky-offset);
        background: #fff;
        border: 1px solid var(--border-color);
        border-radius: 12px;
        box-shadow: var(--shadow-light);
        padding: 1rem;
        max-height: calc(100vh - 120px);
        overflow: auto;
      }

      .toc-title {
        font-weight: 800;
        color: var(--text-primary);
        letter-spacing: 0.02em;
        margin-bottom: 0.75rem;
      }

      .toc-nav ul {
        list-style: none;
        padding: 0;
        margin: 0;
      }

      .toc-item a {
        display: block;
        padding: 0.5rem 0.75rem;
        border-radius: 8px;
        color: var(--text-secondary);
        text-decoration: none;
        border-left: 4px solid transparent;
      }

      .toc-item.depth-3 a {
        padding-left: 1.5rem;
      }

      .toc-item a:hover {
        color: var(--text-primary);
        background: #f6f8fa;
      }

      .toc-item a.active {
        color: var(--text-primary);
        background: #f6f8fa;
        border-left-color: var(--accent-color);
        font-weight: 700;
      }
      
      /* 重要：正文来自 Markdown，不携带 astro 的 data-attr。
         使用 :global() 让选择器作用到插槽内容。 */
      .blog-content :global(h1), .blog-content :global(h2), .blog-content :global(h3) {
        color: var(--text-primary);
        margin-top: 3rem;
        margin-bottom: 1.5rem;
        font-weight: 600;
        scroll-margin-top: calc(var(--sticky-offset) + 12px);
      }
      
      .blog-content :global(h1) {
        font-size: 2.25rem;
        border-bottom: 3px solid var(--primary-color);
        padding-bottom: 0.75rem;
        margin-top: 4rem;
      }
      
      .blog-content :global(h2) {
        font-size: 2.125rem; /* 更大 */
        color: var(--text-primary);
        margin-top: 3.5rem;   /* 与上文拉开 */
        margin-bottom: 1rem;  /* 与下文拉开 */
        border-left: 6px solid var(--accent-color);
        padding-left: 0.9rem;
        line-height: 1.25;    /* 更紧凑的标题行高 */
        font-weight: 700;     /* 更粗 */
      }
      
      .blog-content :global(h3) {
        font-size: 1.5rem;
        color: var(--text-primary);
        margin-top: 2.5rem;
      }
      
      .blog-content :global(p) {
        margin-bottom: 1.75rem;
        color: var(--text-secondary);
      }
      
      .blog-content :global(ul), .blog-content :global(ol) {
        margin-bottom: 1.75rem;
        padding-left: 2rem;
      }
      
      .blog-content :global(li) {
        margin-bottom: 0.75rem;
        color: var(--text-secondary);
      }
      
      .blog-content :global(strong) {
        color: var(--text-primary);
        font-weight: 600;
      }
      
      .blog-content :global(code) {
        background-color: #f1f3f4;
        color: #d73a49;
        padding: 0.2rem 0.4rem;
        border-radius: 4px;
        font-family: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace;
        font-size: 0.875em;
      }
      
      .blog-content :global(pre) {
        background-color: #f6f8fa;
        border: 1px solid var(--border-color);
        border-radius: 8px;
        padding: 1.5rem;
        overflow-x: auto;
        margin: 2rem 0;
        box-shadow: var(--shadow-light);
      }
      
      .blog-content :global(pre) :global(code) {
        background-color: transparent;
        padding: 0;
        color: var(--text-primary);
      }
      
      .blog-content :global(a) {
        color: var(--primary-color);
        text-decoration: none;
        border-bottom: 2px solid rgba(255,92,53,0.25);
        transition: color 0.2s ease, border-color 0.2s ease;
      }

      .blog-content :global(a:hover) {
        color: #e24e2f;
        border-color: rgba(255,92,53,0.5);
      }
      
      .blog-content :global(blockquote) {
        border-left: 4px solid var(--primary-color);
        padding: 1rem 1.5rem;
        margin: 2rem 0;
        font-style: italic;
        color: var(--text-secondary);
        background-color: white;
        border-radius: 0 8px 8px 0;
        box-shadow: var(--shadow-light);
      }
      
      .back-to-blog {
        text-align: center;
        margin-top: 4rem;
        padding-top: 3rem;
        border-top: 1px solid var(--border-color);
      }
      
      .back-button {
        background-color: var(--secondary-color);
        color: white;
        padding: 1rem 2rem;
        border-radius: 8px;
        font-weight: 600;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.75rem;
        transition: all 0.2s ease;
        box-shadow: var(--shadow-light);
      }
      
      .back-button:hover {
        background-color: #0e3a4e;
        transform: translateY(-2px);
        box-shadow: var(--shadow-medium);
        color: white;
      }
      
      .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 2rem;
      }
      
      @media (max-width: 768px) {
        .with-toc {
          grid-template-columns: 1fr;
        }

        .toc {
          position: relative;
          top: 0;
          max-height: none;
          margin-bottom: 1.5rem;
        }
        .blog-container {
          padding: 2rem 1rem;
        }
        
        .blog-title {
          font-size: 2.25rem;
        }
        
        .blog-meta {
          flex-direction: column;
          gap: 1rem;
        }
        
        .container {
          padding: 0 1rem;
        }
      }
    </style>
  </head>
  <body>
    <!-- 导航栏 -->
    <nav class="navbar" role="navigation" aria-label="main navigation">
      <div class="container">
        <div class="navbar-brand">
          <a class="navbar-item" href="/blog">
            <svg class="nav-icon" viewBox="0 0 24 24" aria-hidden="true">
              <path d="M9 3a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v1h2a2 2 0 0 1 2 2v2h1a1 1 0 1 1 0 2h-1v4h1a1 1 0 1 1 0 2h-1v2a2 2 0 0 1-2 2h-2v1a1 1 0 1 1-2 0v-1h-4v1a1 1 0 1 1-2 0v-1H6a2 2 0 0 1-2-2v-2H3a1 1 0 1 1 0-2h1v-4H3a1 1 0 1 1 0-2h1V6a2 2 0 0 1 2-2h2V3Zm-1 5v8h8V8H8Z"/>
            </svg>
            <span>IoTSploit</span>
          </a>
        </div>
        
        <div class="navbar-menu">
          <div class="navbar-end">
            <a class="navbar-item" href="/">
              <svg class="nav-icon" viewBox="0 0 24 24" aria-hidden="true">
                <path d="M3 10.5 12 3l9 7.5V20a1 1 0 0 1-1 1h-5v-6H9v6H4a1 1 0 0 1-1-1v-9.5Z"/>
              </svg>
              <span>主页</span>
            </a>
            <a class="navbar-item" href="/download.html">
              <svg class="nav-icon" viewBox="0 0 24 24" aria-hidden="true">
                <path d="M7 18a5 5 0 0 1 .31-10A7 7 0 0 1 21 10.5a4.5 4.5 0 0 1-1 8.9H7Z"/>
                <path d="M12 7v7m0 0 3.5-3.5M12 14 8.5 10.5" stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
              <span>下载</span>
            </a>
            <a class="navbar-item" href="https://github.com/TKXB/iotsploit" target="_blank">
              <svg class="nav-icon" viewBox="0 0 24 24" aria-hidden="true">
                <path d="M12 .5a11.5 11.5 0 0 0-3.64 22.41c.57.1.78-.25.78-.55v-2c-3.17.69-3.84-1.37-3.84-1.37-.52-1.33-1.28-1.68-1.28-1.68-1.05-.71.08-.7.08-.7 1.16.08 1.77 1.19 1.77 1.19 1.03 1.76 2.71 1.25 3.38.95.11-.76.4-1.25.73-1.54-2.53-.29-5.2-1.26-5.2-5.6 0-1.24.44-2.25 1.17-3.04-.12-.29-.51-1.45.11-3.02 0 0 .96-.31 3.15 1.16a10.9 10.9 0 0 1 5.74 0c2.19-1.47 3.15-1.16 3.15-1.16.62 1.57.23 2.73.11 3.02.73.79 1.17 1.8 1.17 3.04 0 4.35-2.68 5.3-5.23 5.59.41.36.77 1.08.77 2.18v3.24c0 .31.2.66.79.55A11.5 11.5 0 0 0 12 .5Z"/>
              </svg>
              <span>GitHub</span>
            </a>
          </div>
        </div>
      </div>
    </nav>

    <div class="blog-container">
      <article class={`blog-post ${(!isListing && headings.length > 0) ? 'with-toc' : ''}`}>
        {(!isListing && headings.length > 0) && (
        <aside class="toc" aria-label="Table of contents">
          <div class="toc-title">目录</div>
          <nav class="toc-nav">
            <ul>
              {headings
                .filter((h) => h.depth === 2 || h.depth === 3)
                .map((h) => (
                  <li class={`toc-item depth-${h.depth}`}>
                    <a href={`#${h.slug}`}>{h.text}</a>
                  </li>
                ))}
            </ul>
          </nav>
        </aside>
        )}

        <div class="content-wrap">
          <header class="blog-header">
            {!isListing && <h1 class="blog-title">{title}</h1>}
            
            <div class="blog-meta">
              {author && (
                <span>
                  <svg class="meta-icon" viewBox="0 0 24 24" aria-hidden="true">
                    <path d="M12 12a5 5 0 1 0-5-5 5 5 0 0 0 5 5Zm0 2c-4.42 0-8 2.24-8 5v1a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1v-1c0-2.76-3.58-5-8-5Z"/>
                  </svg>
                  {author}
                </span>
              )}
              {pubDate && (
                <span>
                  <svg class="meta-icon" viewBox="0 0 24 24" aria-hidden="true">
                    <path d="M7 2a1 1 0 0 1 1 1v1h8V3a1 1 0 1 1 2 0v1h1a2 2 0 0 1 2 2v3H3V6a2 2 0 0 1 2-2h1V3a1 1 0 0 1 1-1Z"/>
                    <path d="M3 10h18v8a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2Z"/>
                  </svg>
                  {pubDate.toLocaleDateString('zh-CN')}
                </span>
              )}
              {pubDate && (
                <span>
                  <svg class="meta-icon" viewBox="0 0 24 24" aria-hidden="true">
                    <path d="M12 22a10 10 0 1 0-10-10 10 10 0 0 0 10 10Zm1-10V6a1 1 0 0 0-2 0v7a1 1 0 0 0 .29.71l3 3a1 1 0 1 0 1.42-1.42Z"/>
                  </svg>
                  {pubDate.toLocaleTimeString('zh-CN', {hour: '2-digit', minute: '2-digit'})}
                </span>
              )}
            </div>
            
            {description && <p class="blog-description">{description}</p>}
            
            {tags && tags.length > 0 && (
              <div class="blog-tags">
                {tags.map(tag => (
                  <span class="tag">{tag}</span>
                ))}
              </div>
            )}
          </header>
          
          <div class="blog-content" id="article-content">
            <slot />
          </div>
          
          <div class="back-to-blog">
            <a href="/blog" class="back-button">
              <i class="fas fa-arrow-left"></i>
              <span>返回博客列表</span>
            </a>
          </div>
        </div>
      </article>
    </div>
    <script>
      // Only enable ToC behavior when ToC exists on the page
      const tocNav = document.querySelector('.toc-nav');
      if (tocNav) {
        const headings = Array.from(document.querySelectorAll('#article-content h2, #article-content h3'));
        const tocLinks = new Map();
        tocNav.querySelectorAll('a').forEach(a => {
          tocLinks.set(a.getAttribute('href'), a);
        });

        // Offset-aware click scroll to avoid covering by sticky header
        tocNav.addEventListener('click', (e) => {
          const link = e.target.closest('a');
          if (!link) return;
          const id = link.getAttribute('href');
          if (!id || !id.startsWith('#')) return;
          const target = document.querySelector(id);
          if (!target) return;
          e.preventDefault();
          const offset = parseInt(getComputedStyle(document.documentElement).getPropertyValue('--sticky-offset')) || 96;
          const top = target.getBoundingClientRect().top + window.scrollY - (offset + 12);
          window.scrollTo({ top, behavior: 'smooth' });
        });

        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            const id = `#${entry.target.id}`;
            const link = tocLinks.get(id);
            if (!link) return;
            if (entry.isIntersecting) {
              document.querySelectorAll('.toc-nav a.active').forEach(el => el.classList.remove('active'));
              link.classList.add('active');
            }
          });
        }, { rootMargin: '0px 0px -70% 0px', threshold: 0.3 });

        headings.forEach(h => observer.observe(h));
      }
    </script>
  </body>
</html> 